name: Release

on:
  push:
    tags:
      - 'v*'
  release:
    types: [published]

env:
  CARGO_TERM_COLOR: always

jobs:
  build-and-release:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact_name: solana-vanity-wallet
            asset_name: solana-vanity-wallet-linux-x64
          - os: macos-latest
            target: x86_64-apple-darwin
            artifact_name: solana-vanity-wallet
            asset_name: solana-vanity-wallet-macos-x64

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
      with:
        targets: ${{ matrix.target }}
    
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-${{ matrix.target }}-cargo-release-${{ hashFiles('**/Cargo.lock') }}
        restore-keys: |
          ${{ runner.os }}-${{ matrix.target }}-cargo-release-
          ${{ runner.os }}-${{ matrix.target }}-cargo-
    
    - name: Build release
      run: cargo build --release
    
    - name: Strip binary (Linux and macOS)
      run: strip target/release/${{ matrix.artifact_name }}
    
    - name: Create archive
      shell: bash
      run: |
        cd target/release
        tar czvf ../../${{ matrix.asset_name }}.tar.gz ${{ matrix.artifact_name }}
        echo "ASSET_PATH=../${{ matrix.asset_name }}.tar.gz" >> $GITHUB_ENV
    
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: ${{ env.ASSET_PATH }}
        asset_name: ${{ matrix.asset_name }}.tar.gz
        tag: ${{ github.ref }}
        overwrite: true
        
  publish-crates-io:
    name: Publish to crates.io
    runs-on: ubuntu-latest
    needs: build-and-release
    if: github.event_name == 'release' && github.event.action == 'published'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Install Rust
      uses: dtolnay/rust-toolchain@stable
    
    - name: Cache cargo
      uses: actions/cache@v4
      with:
        path: |
          ~/.cargo/registry
          ~/.cargo/git
          target
        key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
    
    - name: Publish to crates.io
      run: cargo publish --token ${{ secrets.CRATES_IO_TOKEN }}
      continue-on-error: true  # Don't fail if already published
